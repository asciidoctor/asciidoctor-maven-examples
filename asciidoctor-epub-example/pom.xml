<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.asciidoctor.maven</groupId>
    <artifactId>asciidoctor-epub-example</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>Asciidoctor EPUB Maven example</name>
    <description>An example project that demonstrates how to convert AsciiDoc to EPUB and mobi with Asciidoctor
        Maven plugin.
    </description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <asciidoctor.maven.plugin.version>3.1.1</asciidoctor.maven.plugin.version>
        <asciidoctorj.epub.version>2.1.3</asciidoctorj.epub.version>
        <asciidoctorj.version>3.0.0</asciidoctorj.version>
        <!-- for a correct kf8 generation, you'll need at least jRuby >= 9.1.8.0 -->
        <jruby.version>9.4.11.0</jruby.version>
        <!-- provide full path to kindlegen application if you need the fallback solution -->
        <path.to.kindlegen>/absolute/path/to/kindlegen</path.to.kindlegen>
    </properties>

    <build>
        <defaultGoal>process-resources</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>${asciidoctor.maven.plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-epub3</artifactId>
                        <version>${asciidoctorj.epub.version}</version>
                    </dependency>
                    <!-- Comment this section to use the default jruby artifact provided by the plugin -->
                    <dependency>
                        <groupId>org.jruby</groupId>
                        <artifactId>jruby</artifactId>
                        <version>${jruby.version}</version>
                    </dependency>
                    <!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj</artifactId>
                        <version>${asciidoctorj.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <backend>epub3</backend>
                    <sourceDocumentName>spine.adoc</sourceDocumentName>
<!--                    <sourceDirectory>src/docs/asciidoc</sourceDirectory>-->
<!--                    <attributes>-->
<!--                        <sourcedir>${project.build.sourceDirectory}</sourcedir>-->
<!--                    </attributes>-->
                    <resources>
                        <resource>
                            <directory>.</directory>
                            <excludes>
                                <exclude>**/**</exclude>
                            </excludes>
                        </resource>
                    </resources>
                </configuration>
                <executions>
                    <!-- shows how to create an epub file -->
                    <execution>
                        <id>generate-spine-epub</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                    </execution>
                    <!-- For testing and troubleshooting you can see the
                     contained resources in an extracted structure -->
                    <execution>
                        <id>generate-extracted-epub</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <attributes>
                                <ebook-extract/>
                            </attributes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
