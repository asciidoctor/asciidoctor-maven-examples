name: Build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      max-parallel: 16
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        java:
          - 11
          - 17
          - 21
        maven:
          - 3.9.6
          - 4.0.0-alpha-10
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: s4u/setup-maven-action@v1.11.0
        with:
            java-distribution: 'temurin'
            java-version: ${{ matrix.java }}
            maven-version: ${{ matrix.maven }}
      - name: Cache dependencies
        uses: actions/cache@v4
        env:
            java_version: ${{ matrix.java }}
        with:
          path: ~/.m2/repository
          key: mvn-cache-${{ runner.os }}-${{ env.java_version }}
          restore-keys: mvn-cache-${{ runner.os }}-${{ env.java_version }}
      - name: Install Graphviz (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install graphviz
      - name: Install Graphviz (Win)
        if: matrix.os == 'windows-latest'
        run: choco install graphviz
      - name: Install Graphviz (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install graphviz
      - name: Environment
        run: mvn -version
      - name: Clean all modules
        run: mvn -B clean
      - name: Test
        run: mvn -B test -pl tests
      - name: Upload test output
        uses: actions/upload-artifact@v4
        env:
            os_name: ${{ matrix.os }}
            java_version: ${{ matrix.java }}
            maven_version: ${{ matrix.maven }}
        if: always()
        with:
            name: tests-output-${{ env.os_name }}-${{ env.java_version }}-${{ env.maven_version }}
            path: tests/target/*
