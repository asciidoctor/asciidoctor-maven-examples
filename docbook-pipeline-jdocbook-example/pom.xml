<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.asciidoctor.maven</groupId>
    <artifactId>docbook-pipeline-jdocbook-example</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>DocBook Pipeline (jDocBook) Maven Example</name>
    <description>An example project that demonstrates how to convert AsciiDoc to DocBook and feed it to the DocBook pipeline to generate a PDF using the Asciidoctor and jDocBook Maven plugins.</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <asciidoctor.maven.plugin.version>2.0.0</asciidoctor.maven.plugin.version>
        <asciidoctorj.version>2.3.0</asciidoctorj.version>
        <jruby.version>9.2.11.1</jruby.version>
    </properties>

    <repositories>
        <repository>
            <id>jboss-public-repository-group</id>
            <url>https://repository.jboss.org/nexus/content/groups/public/</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <build>
        <defaultGoal>process-resources</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>${asciidoctor.maven.plugin.version}</version>
                <dependencies>
                    <!-- Comment this section to use the default jruby artifact provided by the plugin -->
                    <dependency>
                        <groupId>org.jruby</groupId>
                        <artifactId>jruby-complete</artifactId>
                        <version>${jruby.version}</version>
                    </dependency>
                    <!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj</artifactId>
                        <version>${asciidoctorj.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <sourceDirectory>src/docs/asciidoc</sourceDirectory>
                    <!-- If you set baseDir to ${project.basedir}, top-level includes are resolved relative to the project root -->
                    <!--
                    <baseDir>${project.basedir}</baseDir>
                    -->
                    <attributes>
                        <endpoint-url>http://example.org</endpoint-url> 
                        <sourcedir>${project.build.sourceDirectory}</sourcedir>
                    </attributes>
                </configuration>
                <executions>
                    <execution>
                        <id>asciidoc-to-docbook</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>docbook</backend>
                            <doctype>book</doctype>
                            <outputDirectory>${project.build.directory}/docbook/source/en-US</outputDirectory> 
                            <attributes>
                                <imagesdir>images</imagesdir>
                            </attributes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--
            NOTE: Use the maven-resources-plugin if there are assets outside the AsciiDoc source folder
                  that need to be copied to the generated-docs. The Maven plugin automatically copies
                  non-AsciiDoc files in the AsciiDoc source folder to generated-docs.
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-asciidoc-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/docs/resources</directory>
                                    <includes>
                                        <include>**/*.jpg</include>
                                        <include>**/*.png</include>
                                    </includes>
                                </resource>
                            </resources>
                            <outputDirectory>target/generated-docs</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            -->
            <plugin>
                <groupId>org.jboss.maven.plugins</groupId>
                <artifactId>maven-jdocbook-plugin</artifactId>
                <version>2.3.8</version>
                <extensions>true</extensions>
                <dependencies>
                    <!-- NOTE pressgang handles staging the DocBook XSL and activates the xslthl source highlighter -->
                    <dependency>
                        <groupId>org.jboss.pressgang</groupId>
                        <artifactId>pressgang-xslt-ns</artifactId>
                        <version>3.0.0</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jboss.pressgang</groupId>
                        <artifactId>pressgang-jdocbook-style</artifactId>
                        <type>jdocbook-style</type>
                        <version>3.0.0</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <sourceDirectory>${project.build.directory}/docbook/source</sourceDirectory>
                    <sourceDocumentName>example-manual.xml</sourceDocumentName>
                    <imageResource>
                        <directory>${project.basedir}/src/docs/asciidoc</directory>
                        <includes>
                            <include>images/**</include>
                        </includes>
                    </imageResource>
                    <masterTranslation>en-US</masterTranslation>
                    <formats>
                        <format>
                            <formatName>pdf</formatName>
                            <stylesheetResource>classpath:/xslt/org/jboss/pressgang/pdf.xsl</stylesheetResource>
                            <finalName>example-manual.pdf</finalName>
                        </format>
                    </formats>
                    <options>
                        <autoDetectFonts>true</autoDetectFonts>
                        <xincludeSupported>true</xincludeSupported>
                        <xmlTransformerType>saxon</xmlTransformerType>
                        <docbookVersion>1.76.1</docbookVersion>
                        <!--
                        <docbookVersion>1.78.1</docbookVersion>
                        -->
                        <localeSeparator>-</localeSeparator>
                        <!-- AsciiDoc processing instructions not processed until version 3.0.1 of pressgang-tools -->
                        <!--
                        <transformerParameters>
                            <asciidoc.mode>1</asciidoc.mode>
                        </transformerParameters>
                        -->
                    </options>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-pdf</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>resources</goal>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
